input                               
pop Ax  
input   
pop Bx  
input    
pop Cx  
push Ax
push 0
je linear
call discr
push Dx
push 0
je oneroot
push Dx
push 0
ja halt  
push -1
push Bx
mul
push Dx
sqrt_c
add
push 2
push Ax
mul
div
out 
push -1
push Bx
mul
push Dx
sqrt_c
sub
push 2
push Ax
mul
div
out 
jmp halt
linear:
push Bx
push 0
je halt
push -1
push Cx
mul
push Bx
div
out 
jmp halt
oneroot:
push -1
push Bx 
mul
push 2
push Ax
mul
div
out
jmp halt
discr:
push Bx  
push Bx 
mul  
push 4  
push Ax   
push Cx 
mul
mul
sub 
pop Dx  
ret
halt:
hlt
